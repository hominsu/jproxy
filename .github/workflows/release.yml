name: Release

on:
  push:
    tags: ['v*']

jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/rust-cross/cargo-zigbuild:latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          apt update && apt install -y mingw-w64 sudo

      - name: Build
        uses: hominsu/cargo-zigbuild-action@v1
        env:
          RUSTFLAGS: -C target-feature=+crt-static
        with:
          name: jproxy
          args: |
            target=x86_64-unknown-linux-musl,release,features=mimalloc
            target=aarch64-unknown-linux-musl,release,features=mimalloc
            target=armv7-unknown-linux-musleabihf,release,features=tikv-jemallocator
            target=arm-unknown-linux-musleabihf,release,features=tikv-jemallocator
            target=i686-unknown-linux-musl,release,features=tikv-jemallocator
            target=x86_64-apple-darwin,release
            target=aarch64-apple-darwin,release
            target=x86_64-pc-windows-gnu,release
            target=i686-pc-windows-gnu,release

      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            artifacts/*
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          token: ${{ secrets.CR_PAT }}
          generate_release_notes: true

  dockerize:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/hominsu/jproxy
            hominsu/jproxy
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: |
            latest=auto
          bake-target: metadata

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_ID }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: hominsu
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: 'lab:latest'
          driver: cloud
          endpoint: 'hominsu/builder'

      - name: Build and Push
        id: bake
        uses: docker/bake-action@v5
        with:
          files: |
            deploy/docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: jproxy
          push: true

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_ID }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: hominsu/jproxy

  crates:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build, dockerize]
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Publish to crates.io
        uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
